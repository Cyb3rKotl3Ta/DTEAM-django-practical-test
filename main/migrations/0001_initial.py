# Generated by Django 5.2.7 on 2025-10-03 11:09

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(help_text="Person's first name", max_length=50, validators=[django.core.validators.MinLengthValidator(2)])),
                ('last_name', models.CharField(help_text="Person's last name", max_length=50, validators=[django.core.validators.MinLengthValidator(2)])),
                ('bio', models.TextField(blank=True, help_text='Personal biography and summary', max_length=1000)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', help_text='Current status of the CV', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this CV is currently active')),
            ],
            options={
                'verbose_name': 'CV',
                'verbose_name_plural': 'CVs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['first_name', 'last_name'], name='main_cv_first_n_656e04_idx'), models.Index(fields=['status'], name='main_cv_status_a9bc2b_idx'), models.Index(fields=['is_active'], name='main_cv_is_acti_f3bfe5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_type', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('linkedin', 'LinkedIn'), ('github', 'GitHub'), ('website', 'Website'), ('other', 'Other')], help_text='Type of contact information', max_length=20)),
                ('value', models.CharField(help_text='The actual contact value (email, phone, URL, etc.)', max_length=200)),
                ('is_primary', models.BooleanField(default=False, help_text='Whether this is the primary contact of this type')),
                ('is_public', models.BooleanField(default=True, help_text='Whether this contact should be publicly visible')),
                ('cv', models.ForeignKey(help_text='CV this contact belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='main.cv')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ['contact_type', '-is_primary'],
                'indexes': [models.Index(fields=['contact_type'], name='main_contac_contact_684542_idx'), models.Index(fields=['is_primary'], name='main_contac_is_prim_4c17f4_idx'), models.Index(fields=['is_public'], name='main_contac_is_publ_ec2986_idx')],
                'unique_together': {('cv', 'contact_type', 'is_primary')},
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Title of the project', max_length=200, validators=[django.core.validators.MinLengthValidator(3)])),
                ('description', models.TextField(help_text='Detailed description of the project', max_length=1000)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('in_progress', 'In Progress'), ('planned', 'Planned')], default='completed', help_text='Current status of the project', max_length=20)),
                ('start_date', models.DateField(help_text='Project start date')),
                ('end_date', models.DateField(blank=True, help_text='Project end date (null if ongoing)', null=True)),
                ('technologies_used', models.TextField(blank=True, help_text='Technologies and tools used in the project', max_length=500)),
                ('project_url', models.URLField(blank=True, help_text='URL to the project (GitHub, live demo, etc.)')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this project should be featured prominently')),
                ('cv', models.ForeignKey(help_text='CV this project belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='main.cv')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-start_date', '-is_featured'],
                'indexes': [models.Index(fields=['status'], name='main_projec_status_10c85e_idx'), models.Index(fields=['start_date'], name='main_projec_start_d_d71c1a_idx'), models.Index(fields=['is_featured'], name='main_projec_is_feat_88b306_idx')],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of the skill', max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('category', models.CharField(choices=[('technical', 'Technical'), ('soft', 'Soft Skills'), ('language', 'Languages'), ('certification', 'Certifications')], help_text='Category of the skill', max_length=20)),
                ('proficiency_level', models.PositiveIntegerField(choices=[(1, '1/5'), (2, '2/5'), (3, '3/5'), (4, '4/5'), (5, '5/5')], default=1, help_text='Proficiency level from 1 to 5')),
                ('description', models.TextField(blank=True, help_text='Additional description of the skill', max_length=500)),
                ('cv', models.ForeignKey(help_text='CV this skill belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='main.cv')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
                'ordering': ['category', 'name'],
                'indexes': [models.Index(fields=['category'], name='main_skill_categor_2d3bef_idx'), models.Index(fields=['proficiency_level'], name='main_skill_profici_d97030_idx')],
                'unique_together': {('cv', 'name')},
            },
        ),
    ]
